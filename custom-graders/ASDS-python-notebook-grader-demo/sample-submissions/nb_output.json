{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "not a graded cell\n"
     ]
    }
   ],
   "source": [
    "print(\"not a graded cell\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Write a function \"factors\" which takes an integer input and outputs a list of factors of that number including 1 and n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# GRADED FUNCTION: factors1\n",
    "\n",
    "def factors1(n):\n",
    "\n",
    "    ## Begin your code here\n",
    "    factor_list = []\n",
    "    for i in range(1,n+1):\n",
    "        if n % i == 0:\n",
    "            factor_list.append(i)    \n",
    "    return factor_list\n",
    "    ## End your code here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Another cell which is not graded\n"
     ]
    }
   ],
   "source": [
    "print(\"Another cell which is not graded\")"
   ]
  },
  {
    "cell_type": "code",
    "execution_count": 20,
    "metadata": {},
    "outputs": [],
    "source": [
     "# GRADED FUNCTION: factors2\n",
     "\n",
     "def factors2(n):\n",
     "\n",
     "    ## Begin your code here\n",
     "    factor_list = []\n",
     "    for i in range(1,n+1):\n",
     "        if n % i == 0:\n",
     "            factor_list.append(i)    \n",
     "    return factor_list\n",
     "    ## End your code here"
    ]
   },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
